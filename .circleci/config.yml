version: 2.1  # use CircleCI 2.0 instead of CircleCI Classic
jobs:  # basic units of work in a run
  build:  # runs not using Workflows must have a `build` job as entry point
    parallelism: 1  # run only one instance of this job in parallel
    docker:  # run the steps with Docker
      - image: cimg/elixir:1.12  # ...with this image as the primary container; this is where all `steps` will run
        environment:  # environment variables for primary container
          MIX_ENV: test
      - image: cimg/postgres:14.2 # database image
        environment:  # environment variables for database
          POSTGRES_USER: postgres
          POSTGRES_DB: vuetaba_test
          POSTGRES_PASSWORD: postgres

    resource_class: small
    working_directory: ~/app  # directory where steps will run

    steps:  # commands that comprise the `build` job
      - checkout  # check out source code to working directory

      - run: mix local.hex --force  # install Hex locally (without prompt)
      - run: mix local.rebar --force  # fetch a copy of rebar (without prompt)

      - restore_cache:  # restores saved mix cache
          keys:  # list of cache keys, in decreasing specificity
            - v2-mix-cache-{{ checksum "mix.lock" }}
            - v2-mix-cache-{{ .Branch }}
            - v2-mix-cache
      - restore_cache:  # restores saved build cache
          keys:
            - v2-build-cache-{{ .Branch }}
            - v2-build-cache
      - run: mix do deps.get, compile  # get updated dependencies & compile them
      - save_cache:  # generate and store cache so `restore_cache` works
          key: v2-mix-cache-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:  # make another less specific cache
          key: v2-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:  # you should really save one more cache just in case
          key: v2-mix-cache
          paths: "deps"
      - save_cache: # don't forget to save a *build* cache, too
          key: v2-mix-cache-{{ checksum "mix.lock" }}
          paths: "_build"
      - save_cache: # don't forget to save a *build* cache, too
          key: v2-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache: # and one more build cache for good measure
          key: v2-build-cache
          paths: "_build"

      - run:  # special utility that stalls main process until DB is ready
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mix test  # run all tests in project

      - store_test_results:  # upload junit test results for display in Test Summary
          path: _build/test/lib/vuetaba
